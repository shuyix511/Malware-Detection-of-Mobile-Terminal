package com.sample.android;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import android.app.AlertDialog;
import android.app.ListActivity;
import android.app.AlertDialog.Builder;
import android.content.DialogInterface;
import android.os.Bundle;
import android.os.Environment;
import android.widget.ListView;
import android.widget.SimpleAdapter;

public class Test extends ListActivity{
	final static String TestFile = "/android";
	final static String unZip = "unzip";
	 public void onCreate(Bundle savedInstanceState) {
	        super.onCreate(savedInstanceState);
	        setContentView(R.layout.test);
	        ListView listview=(ListView)findViewById(R.id.ListView01);
	        ArrayList<HashMap<String, String>> listItem = new ArrayList<HashMap<String, String>>(); 
	        boolean sdCardExist = Environment.getExternalStorageState().equals(
					android.os.Environment.MEDIA_MOUNTED);
		    String fileresult;
		    if (sdCardExist) {
				String sdfile = Environment.getExternalStorageDirectory()
						.getPath() ;
				String foldername=sdfile+  TestFile; 							
				File file = new File(foldername);
				List<String> testfilepath = new ArrayList<String>();
				FileList(file, testfilepath);	
				int size=testfilepath.size();
				if(size>0)
				{				
					for(int i=0;i<size;i++)  
			        {
			        	fileresult=JudgeFile(sdfile,testfilepath); 	
			        	String[] str=fileresult.split(" ");
			        	HashMap<String, String> map = new HashMap<String, String>();  
			        	map.put("ItemTitle",str[0]);
			        	map.put("ItemText",str[1]);
	
			        	listItem.add(map);
			        }
			        SimpleAdapter listItemAdapter = new SimpleAdapter(this,listItem,//数据源   
			                R.layout.list,//ListItem的XML实现  
			                //动态数组与ImageItem对应的子项          
			                new String[] {"ItemTitle", "ItemText"},   
			                //ImageItem的XML文件里面的一个ImageView,两个TextView ID  
			                new int[] {R.id.ItemTitle,R.id.ItemText}  
			            );  
			        listview.setAdapter(listItemAdapter);   
				}
				else
				{
					String tip="检测文件没有出现在SD卡中的android文件夹中！";
					showDialog(tip.toString().trim());
				}				
			}
     
	    }

	private String JudgeFile(String sdfile, List<String> testfilepath) {
		// TODO Auto-generated method stub
		String  result;
		for (int i = 0; i < testfilepath.size(); i++) {
			try{
				Bayes bayes=new Bayes();
				boolean type;
				String fileType;				
				String unzipfile=sdfile+ File.separator+unZip;
				IsFile(unzipfile);
				String testfile=testfilepath.get(i);
				unzip(testfile,unzipfile);
				
				String dexFile=unZip+"/classes.dex";
				String xmlFile=unZip+"/AndroidManifest.xml";
				type=bayes.GetFeatureInfo(dexFile, xmlFile);
				if(type)
				{
					fileType="normal";
				}
				else
				{
					fileType="virus";
				}
				result=testfile+" "+fileType;
				return result;
			} catch (Exception e) {			          
	            e.printStackTrace();
	        }
		}
		result="";
		return result ;
		
	}
	private void IsFile(String foldername) {
		// TODO Auto-generated method stub
		File desFile = new File(foldername);
		if(desFile.exists())
		{
			desFile.delete();
		}
		File fileParentDir = desFile.getParentFile();
		if(!fileParentDir.exists()){
		fileParentDir.mkdirs();
		}
		try {
			desFile.createNewFile();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
	}

	private void showDialog(String tip) {
		// TODO Auto-generated method stub
		AlertDialog.Builder builder=new Builder(Test.this);
		builder.setMessage(tip);
		builder.setTitle("Message");
		builder.setPositiveButton("确定", new DialogInterface.OnClickListener(){
			@Override
			public void onClick(DialogInterface dialog, int which) {
				// TODO Auto-generated method stub
				dialog.dismiss();
			}
        });
		builder.create().show();
    }

	private void FileList(File file, List<String> testfilepath) {
			// TODO Auto-generated method stub
			if (file.isDirectory()) {
				File[] filelist = file.listFiles();
				if (filelist == null)
					return;
				for (int i = 0; i < filelist.length; i++) {
					FileList(filelist[i], testfilepath);
				}
			} else {
				String filePath = file.getAbsolutePath();
				if (file.getName().indexOf(".apk") > 0) {
					testfilepath.add(filePath);
				}
			}
		}
		private void unzip(String zipFileName, String outputDirectory)  throws Exception {
			// TODO Auto-generated method stub
			File zipFile = new File(zipFileName);//FILE_PATH为压缩文件的路径
			ZipFile zf = new ZipFile(zipFile);
			for(Enumeration<?> entries = zf.entries(); entries.hasMoreElements();){//遍历压缩文件中的所有文件
			ZipEntry entry = ((ZipEntry)entries.nextElement());
			String name=entry.getName();
			if((name=="classes.dex")||(name=="AndroidManifest.xml"))
			{
			InputStream is = zf.getInputStream(entry);
			String str = outputDirectory + File.separator + entry.getName();
			str = new String(str.getBytes("8859_1"),"GB2312");//压缩文件的编码是8859_1,此处可将其转换成指定的编码
			File desFile = new File(str);
			if(desFile.exists())
			{
				desFile.delete();
			}
			File fileParentDir = desFile.getParentFile();
			if(!fileParentDir.exists()){
			fileParentDir.mkdirs();
			}
			desFile.createNewFile();
			
			FileOutputStream out = new FileOutputStream(desFile);
			byte buffer[] = new byte[1024*1024];
			int readLength;
			while((readLength = is.read(buffer)) > 0){
			out.write(buffer, 0, readLength);
			}
			is.close();
			out.close();
			}
			}	
	} 
}

	
