package com.sample.download;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.Map;

import android.os.Environment;

public class FileUtils {
	private String SDPATH;
	final static String FeatureDir = "TXT/";
	final static String Feature = "feature.txt";
		
	public String getSDPATH(){
		return SDPATH;
	}
	public FileUtils(){
		SDPATH=Environment.getExternalStorageDirectory()+"/";
	}	
	 
	public File createSDFile(String fileName)throws IOException
	{
		File file=new File(SDPATH+fileName);
		file.createNewFile();
		return file;
	}
	public File createSDDir(String dirName){
		File dir=new File(SDPATH+dirName);
		dir.mkdir();
		return dir;
	}
	public boolean delSDFile(String fileName){
		File file=new File(SDPATH+fileName);
		if(file.exists())
		{
			file.delete();
		}		
		return true;
	}
	public boolean isFileExist(String fileName){
		File file=new File(SDPATH+fileName);
		return file.exists();
	}
	public File write2SDFromInput(String path,String fileName,InputStream input){
		File file=null;
		OutputStream output=null;
		try{
			createSDDir(path);
			file=createSDFile(path+fileName);
			output=new FileOutputStream(file);
			byte buffer[]=new byte[4*1024];
			while((input.read(buffer))!=-1){
				output.write(buffer);
			}
			output.flush();
		}catch(Exception e){
			e.printStackTrace();
		}
		finally{
			try{
				output.close();
			}catch (Exception e){
				e.printStackTrace();
			}			
		}
		return file;
	}
	public void read2SDFromInput(Map<String, Integer> normalmap, Map<String, Integer> virusmap){
		String foldername=Environment.getExternalStorageDirectory().getPath();
        String path=foldername+"/"+FeatureDir+Feature;
 
    	try {
			FileInputStream fis = new FileInputStream(path);
			InputStreamReader isr = new InputStreamReader(fis, "utf-8");

			BufferedReader br = new BufferedReader(isr);// 文件自己替换.
			String data = "";
			StringBuffer temp = new StringBuffer();
			while ((data = br.readLine()) != null) {
				temp.append(data);
			}
			String strflow = temp.toString();
			String[] str1=strflow.split(";");
			for(int i=0;i<str1.length;i++)
			{
				String str2=str1[i];
				String[] str3=str2.split(" ");
				String key=str3[0];
				String[] str4=str3[1].split(":");
				Integer value=Integer.parseInt(str4[0]);
				normalmap.put(key, value);
				value=Integer.parseInt(str4[1]);
				virusmap.put(key, value);
			}
    	  }	
    		catch (Exception e1){
    			e1.printStackTrace();
    		}		
	   }
}
